on fs
	mkdir /mnt/vendor 0700 root root
	mkdir /mnt/vendor/protect_f 0700 root root
	mkdir /mnt/vendor/protect_s 0700 root root
	mkdir /mnt/vendor/nvdata 0700 root root
	mkdir /mnt/vendor/nvcfg 0700 root root
	mount ext4 /dev/block/platform/bootdevice/by-name/protect1 /mnt/vendor/protect_f
	mount ext4 /dev/block/platform/bootdevice/by-name/protect2 /mnt/vendor/protect_s
	mount ext4 /dev/block/platform/bootdevice/by-name/nvdata /mnt/vendor/nvdata
	mount ext4 /dev/block/platform/bootdevice/by-name/nvcfg /mnt/vendor/nvcfg
	symlink /mnt/vendor/protect_f /vendor/protect_f
	symlink /mnt/vendor/protect_s /vendor/protect_s
	symlink /mnt/vendor/nvcfg /vendor/nvcfg
	symlink /mnt/vendor/nvdata /vendor/nvdata
	write /proc/bootprof "tkcore: prepare system ta path"
	chown root root /vendor/app/t6

	write /proc/bootprof "tkcore: prepare protect_f sfs"
	mkdir /mnt/vendor/protect_f/tee
	setprop vendor.trustkernel.fs.mode 3
	setprop vendor.trustkernel.fs.state ready
	#restorecon /mnt/vendor/persist #No need to restorecontext, because of TWRP selinux=permissive
	mkdir /mnt/vendor/persist/t6
	chown root root /mnt/vendor/persist/t6
	#restorecon /mnt/vendor/persist/t6 #No need to restorecontext, because of TWRP selinux=permissive
	start teed

on property:vendor.trustkernel.fs.state=ready
	write /proc/bootprof "tkcore: prepare basic"
	mkdir /data/vendor
	mkdir /data/vendor/t6
	chown root root /data/vendor/t6
	#restorecon /data/vendor/t6 #No need to restorecontext, because of TWRP selinux=permissive

	write /proc/bootprof "tkcore: prepare sfs"
	mkdir /data/vendor/t6/fs
	chown root root /data/vendor/t6/fs
	#restorecon /data/vendor/t6/fs #No need to restorecontext, because of TWRP selinux=permissive

	write /proc/bootprof "tkcore: prepare service provider ta path"
	mkdir /data/vendor/t6/app
	chown root root /data/vendor/t6/app
	#restorecon /data/vendor/t6/app #No need to restorecontext, because of TWRP selinux=permissive

# For non-encrypted case
on property:ro.crypto.state=unencrypted
	setprop vendor.trustkernel.fs.mode 1
	setprop vendor.trustkernel.fs.state ready

# For FDE/encrypted successfully
on property:vold.decrypt=trigger_restart_framework
	setprop vendor.trustkernel.fs.mode 2
	setprop vendor.trustkernel.fs.state ready

# For FBE/encrypted successfully
on property:ro.crypto.type=file && property:ro.crypto.state=encrypted
	setprop vendor.trustkernel.fs.mode 3
	setprop vendor.trustkernel.fs.state ready

on property:vendor.trustkernel.log.state=ready
	write /proc/bootprof "tkcore: prepare log file"
	#restorecon /data/vendor/t6/tkcore.log #No need to restorecontext, because of TWRP selinux=permissive
	setprop vendor.trustkernel.log.state enable

service teed /sbin/teed \
    --datapath /data/vendor/t6/fs \
    --sptapath /data/vendor/t6/app \
    --systapath /vendor/app/t6 \
    --prot /mnt/vendor/persist/t6 \
    --logpath /data/vendor/t6/tkcore.log \
    --proprefix vendor.trustkernel
	user root
	group root
    disabled
    seclabel u:r:recovery:s0
